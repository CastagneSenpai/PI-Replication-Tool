<UserControl x:Class="Views.PushTagsConfigurationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Viewmodel="clr-namespace:ViewModels"
        mc:Ignorable="d"
        Height="Auto" Width="Auto"
        Background="#FFFFFF">

    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="15" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#EAB01E"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#EAB01E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#F1CA68"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#F1CA68"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="RoundedMenuButton2" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" CornerRadius="15" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <UserControl.DataContext>
        <Viewmodel:PushTagsConfigurationViewModel/>
    </UserControl.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="65"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="68*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="225*"/>
            <ColumnDefinition Width="225*"/>
            <ColumnDefinition Width="225"/>
            <ColumnDefinition Width="225"/>
        </Grid.ColumnDefinitions>

        <TextBlock Name="textBlock1" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="25,0,0,0" Grid.Row="1" Grid.Column="0" FontSize="16px">
          <Bold>Destination Server :</Bold>
        </TextBlock>
        <TextBlock Name="textBlock2" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="186,0,0,0" Grid.Row="1" Grid.Column="0" FontSize="16px" Text="{Binding DestinationServer, Mode=TwoWay}">
        </TextBlock>

        <StackPanel Grid.Row="1" Grid.Column="1">
            <RadioButton x:Name="cb1"  Margin="5,0,0,0" HorizontalAlignment="Left" 
            Content="Create Only" IsChecked="True" FontSize="14px"/>
            <RadioButton x:Name="cb2" Margin="5,0,0,0" HorizontalAlignment="Left" 
            Content="Update Only" IsChecked="False" FontSize="14px" />
            <RadioButton x:Name="cb3" Margin="5,0,0,0" HorizontalAlignment="Left" 
            Content="Create or Update" IsChecked="False" FontSize="14px" />
        </StackPanel>

        <Button Style="{DynamicResource RoundedButtonStyle}" Grid.Row="1" Grid.Column="3"
                Content="Update Tags"
                HorizontalAlignment="Left" 
                VerticalAlignment="Top"
                Margin="0,40,0,0"
                Height="25"
                Width="90"
                FontFamily="Arial"
                Foreground="#FFFFFF"
                Background="#2f3640"
                Command="{Binding ButtonUpdateTags}">
        </Button>

        <Button Style="{DynamicResource RoundedButtonStyle}" Grid.Row="1" Grid.Column="3"
                Content="Push"
                HorizontalAlignment="Right" 
                VerticalAlignment="Bottom"
                Margin="0,0,20,0"
                Height="25"
                Width="90"
                FontFamily="Arial"
                Foreground="#FFFFFF"
                Background="#2f3640"
                Command="{Binding ButtonPushTags}">
        </Button>

        <Grid Margin="10,20,20,20" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="6">
            <DataGrid AutoGenerateColumns="False" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible" VerticalAlignment="Stretch" IsReadOnly="False" ItemsSource="{Binding Attributes}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                    <DataGridTextColumn Header="InstrumentTag" Binding="{Binding InstrumentTag}" />
                    <DataGridTextColumn Header="PointType" Binding="{Binding PointType}" />
                    <DataGridTextColumn Header="PointSource" Binding="{Binding PointSource}" />
                    <DataGridTextColumn Header="Location1" Binding="{Binding Location1}" />
                    <DataGridTextColumn Header="Zero" Binding="{Binding Zero}" />
                    <DataGridTextColumn Header="TypicalValue" Binding="{Binding TypicalValue}" />
                    <DataGridTextColumn Header="Span" Binding="{Binding Span}" />
                    <DataGridTextColumn Header="Compressing" Binding="{Binding Compressing}" />
                    <DataGridTextColumn Header="CompDev" Binding="{Binding CompDev}" />
                    <DataGridTextColumn Header="CompMin" Binding="{Binding CompMin}" />
                    <DataGridTextColumn Header="CompDevPercent" Binding="{Binding CompDevPercent}" />
                    <DataGridTextColumn Header="ExcDev" Binding="{Binding ExcDev}" />
                    <DataGridTextColumn Header="ExcMin" Binding="{Binding ExcMin}" />
                    <DataGridTextColumn Header="ExcMax" Binding="{Binding ExcMax}" />
                    <DataGridTextColumn Header="ExcDevPercent" Binding="{Binding ExcDevPercent}" />
                    <DataGridTextColumn Header="DataSecurity" Binding="{Binding DataSecurity}" />
                    <DataGridTextColumn Header="PtSecurity" Binding="{Binding PtSecurity}" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
